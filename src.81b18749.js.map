{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","src/services/swapi/swapi.js","src/services/game/generateQuestions.js","src/components/swLogo/swLogo.js","src/services/game/selectGameMode.js","src/components/mainMenu/mainMenu.js","src/components/recognitionImg/ImgModePeople/ImgModePeople.js","src/components/gameMode/gameMode.js","src/consts/GAME_MODES.js","src/components/gameRules/gameRules.js","src/components/redButton/redButton.js","src/services/game/toggleButtonText.js","src/services/game/toggleGameRulesVisibility.js","src/services/game/isAnswerCorrect.js","src/services/player/player.js","src/services/player/autoPlayer.js","src/services/game/changeGameModeText.js","src/services/game/showNextQuestion.js","src/utils/helpers/throttle.js","src/components/answersCard/answersCard.js","src/components/TextTimer/TextTimer.js","src/components/LightsaberTimer/LightsaberTimer.js","src/utils/helpers/convertTimeToSeconds.js","src/components/modalWindow/modal.js","src/components/modalWindowContent/modalWindowContent.js","src/services/rank/rank.js","src/services/rank/saveFinalScore.js","src/components/Timer/Timer.js","src/components/quizGameView/quizGameView.js","src/services/game/showGamePanel.js","src/components/ranking/ranking.js","src/components/mainView/mainView.js","src/components/spinner/spinner.js","src/app/App.js","src/index.js"],"names":["swapiEnv","fetchIdsFromAPI","gameMode","fetch","url","response","json","results","map","item","id","console","log","fetchNameFromAPI","index","name","fetchImgFromAPI","responseType","stringUrl","generateQuestionForTheGameMode","getRandomNumber","minInt","maxInt","Math","floor","random","getRangeOfIds","result","ids","filter","generateAnswerNumbers","arrOfNumbers","minIndex","answerNumbers","i","length","rand","includes","push","getCorrectAnswerIds","answers","getAnswers","arrWithNumbers","forEach","number","then","resp","Error","correctAnswerNumber","window","img","btoa","image","rightAnswer","createLogo","swLogo","Image","src","swLogoImg","setAttribute","classList","add","addEventListener","location","reload","selectGameMode","mode","dataset","document","querySelector","remove","spinner","gamePanelContainer","gamePanel","appendChild","PEOPLE_MODE","VEHICLES_MODE","STARSHIPS_MODE","createMainMenu","menuContainer","createElement","peopleMenuItem","innerText","vehiclesMenuItem","starshipsMenuItem","mainMenuItems","createImgElementPeopleMode","imgBase64","atob","PEOPLE_MODE_QUESTION","VEHICLES_MODE_QUESTION","STARSHIPS_MODE_QUESTION","modeQuestion","questionContainer","className","questionText","createTextNode","getGameModeQuestion","GAME_MODES","people","vehicles","spaceships","gameDescriptionText","answer","createGameRulesComponent","rulesComponent","titleEl","icon","spanTitleEl","rulesEl","content","redButton","displayText","showGamePanel","button","label","append","toggleButtonText","modeRulesClassList","buttonText","btnIcon","contains","textContent","toggleGameRulesVisibility","modeRulesContainer","toggle","isAnswerCorrect","correctAnswer","playerAnswer","isCorrectAnswerString","isPlayerAnswerString","toLowerCase","saveAnswer","selectedAnswer","isCorrect","questionSaved","game","localStorage","getItem","parsedGame","JSON","parse","human","setItem","stringify","saveNextAnswer","AutoPlayer","min","max","ceil","Array","isArray","autoPlayerAnswer","autoPlayerAnswerIndex","generateAutoPlayerAnswer","getAutoPlayer","autoPlayer","changeGameModeText","gameModeElement","getElementById","newGameModeElementText","replace","createWrapperForComponent","nodeName","componentWrapper","showNextQuestion","quizGameView","spinnerVisibilityTime","computer","question","questionsArea","imageWrapper","gameModeWrapper","answersCardsWrapper","getAnswer","setTimeout","prepend","throttle","callback","delay","lastClickTime","currentClickTime","Date","getTime","answersCardsEventHandler","savePlayerAnswers","createAnswersCards","possibleAnswers","answersCardsComponent","TextTimer","minutes","seconds","counterOutput","remainingTime","LightsaberTimer","progress","style","setProperty","saberArea","saberHandle","saberLight","convertTimeToSeconds","modal","component","swquiz","backdrop","closeModal","display","hideModalVisibility","countCorrectAnswers","answersList","player","setYodaQuoteString","humanPlayer","setFinishGameString","quote","questionsNumber","humanAnswers","autoPlayerAnswers","getFinishGameString","text","prepareEndGameText","title","prepareEndGameSummary","summary","createHeroImg","alt","createAnswersHeading","answersHeading","displayResultsTable","resultsTable","header","headerRow","th","resultsTableBody","markup","insertAdjacentHTML","createNameInput","nameInput","createNameLabel","nameLabel","createWarning","warning","showWarning","hideWarning","createSubmitButton","submitBtn","toUpperCase","handleSaveUserResult","e","saveScore","preventDefault","input","playerName","value","modalWrapper","gameResultsModal","middleContainer","rightContainer","form","mainView","setRank","rank","rankParsed","starships","saveToRank","sortedRank","sort","a","b","score","getRank","saveFinalScore","questions","Timer","allSeconds","timerArea","initialProgressValue","intervalId","setInterval","progressValue","round","innerHTML","clearInterval","removeItem","closeQuizGamePanel","createQuizGameView","timerContainer","startGamePanel","getRankingTable","rankingTableContent","playersRankingData","getRanking","rankingWrapper","rankingTitle","rankingTitleIcon","rankingTitleText","ranking","prepareNavigationData","children","containerClassName","containerNodeName","prepareMainData","imgData","getComponentsForNavigation","componentsData","componentsForNavigation","wrapper","container","getComponentsForMain","componentsForMain","createGamePanel","mainComponents","createMainView","mainViewComponent","navigation","skCircle","div","App","options","ONE_SECOND_MILLIS","SW_API_BASE_URL","QUIZ_MAX_TIME","onload","swApiBaseUrl","quizMaxTime"],"mappings":"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","file":"src.81b18749.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","const swapiEnv = process.env.SW_API_BASE_URL;\n\n/*\n\n// real API fetch function\n\nexport const fetchIdsFromAPI = async (gameMode) => {\n  const url = `${swapiEnv}/${gameMode}`;\n\n  try {\n    const response = await fetch(url);\n    const results = await response.json();\n\n    console.log(results);\n  } catch (err) {\n    console.log(err);\n    throw err;\n  }\n};*/\n\nexport const fetchIdsFromAPI = async (gameMode) => {\n  const url = `http://localhost:3000/${gameMode}`;\n\n  try {\n    const response = await fetch(url);\n    const results = await response.json();\n\n    return results.map((item) => {\n      const id = item.id;\n      return id;\n    });\n  } catch (err) {\n    console.log(err);\n    throw err;\n  }\n};\n\nexport const fetchNameFromAPI = async (gameMode, index) => {\n  const url = `http://localhost:3000/${gameMode}/${index}`;\n\n  try {\n    const response = await fetch(url);\n    const results = await response.json();\n\n    const name = results.name;\n    return name;\n  } catch (err) {\n    console.log(err);\n    throw err;\n  }\n};\n\nexport const fetchImgFromAPI = async (gameMode, index) => {\n  const url = `../../static/assets/img/modes/${gameMode}/${index}.jpg`;\n\n  try {\n    const response = await fetch(url, { responseType: 'blob' });\n    const stringUrl = response.url;\n    return stringUrl;\n  } catch (err) {\n    console.log(err);\n    throw err;\n  }\n};\n","import {\n  fetchIdsFromAPI,\n  fetchNameFromAPI,\n  fetchImgFromAPI\n} from '../swapi/swapi';\n\nconst getRandomNumber = (minInt, maxInt) => {\n  return Math.floor(Math.random() * (maxInt - minInt + 1)) + minInt;\n};\n\nconst getRangeOfIds = async (gameMode) => {\n  const ids = await fetchIdsFromAPI(gameMode);\n  let result = ids;\n  if (gameMode === 'starships') {\n    result = ids.filter(\n      (item) => item > 3 && item !== 17 && item !== 32 && item <= 48\n    );\n  }\n  if (gameMode === 'vehicles') {\n    result = ids.filter((item) => item <= 42);\n  }\n  return result;\n};\n\nconst generateAnswerNumbers = (arrOfNumbers) => {\n  const minIndex = 0;\n  const answerNumbers = [];\n  for (let i = 0; answerNumbers.length <= 3; i++) {\n    const index = getRandomNumber(minIndex, arrOfNumbers.length - 1);\n    const rand = arrOfNumbers[index];\n    if (!answerNumbers.includes(rand)) {\n      answerNumbers.push(rand);\n    }\n  }\n  return answerNumbers;\n};\n\nconst getCorrectAnswerIds = (answers) => {\n  const rand = getRandomNumber(0, answers.length - 1);\n  return answers[rand];\n};\n\nconst getAnswers = async (gameMode, arrWithNumbers) => {\n  const answers = [];\n  await arrWithNumbers.forEach(async (number) => {\n    await fetchNameFromAPI(gameMode, number).then((resp) => {\n      answers.push(resp);\n    });\n  });\n  return answers;\n};\n\nconst generateQuestionForTheGameMode = async (gameMode) => {\n  if (typeof gameMode !== 'string') {\n    throw new Error('errrr');\n  }\n\n  const answerNumbers = generateAnswerNumbers(await getRangeOfIds(gameMode));\n\n  const correctAnswerNumber = getCorrectAnswerIds(answerNumbers);\n\n  const img = window.btoa(await fetchImgFromAPI(gameMode, correctAnswerNumber));\n\n  return {\n    image: img,\n    answers: await getAnswers(gameMode, answerNumbers),\n    rightAnswer: await fetchNameFromAPI(gameMode, correctAnswerNumber)\n  };\n};\n\nexport default generateQuestionForTheGameMode;\n","import './swLogo.css';\nimport swLogoImg from '../../../static/assets/ui/StarWarsLogo.png';\n\nfunction createLogo() {\n  const swLogo = new Image();\n  swLogo.src = swLogoImg;\n  swLogo.setAttribute('alt', 'Star Wars logo');\n  swLogo.classList.add('swLogo');\n  swLogo.addEventListener('click', function () {\n    window.location.reload();\n  });\n  return swLogo;\n}\n\nexport default createLogo;\n","import { createGamePanel } from '../../components/mainView/mainView';\n\nexport const selectGameMode = async (item) => {\n  const mode = item.dataset.id;\n\n  const previousGame = document.querySelector('.main-game-panel');\n  previousGame.remove();\n\n  const spinner = document.querySelector('.sk-circle');\n  spinner.classList.remove('hide');\n\n  const gamePanelContainer = document.querySelector('.main-view');\n\n  const gamePanel = await createGamePanel(mode);\n\n  spinner.classList.add('hide');\n\n  gamePanelContainer.appendChild(gamePanel);\n};\n","import './mainMenu.css';\nimport { selectGameMode } from '../../services/game/selectGameMode';\n\nexport const PEOPLE_MODE = 'people';\nexport const VEHICLES_MODE = 'vehicles';\nexport const STARSHIPS_MODE = 'starships';\n\nfunction createMainMenu() {\n  const menuContainer = document.createElement('div');\n  menuContainer.classList.add('swquiz-mainmenu');\n  menuContainer.id = 'swquiz-mainmenu';\n  menuContainer.setAttribute('data-id', 'swquiz-mainmenu');\n\n  const peopleMenuItem = document.createElement('p');\n  peopleMenuItem.classList.add('swquiz-mainmenu-item', 'selected');\n  peopleMenuItem.id = PEOPLE_MODE;\n  peopleMenuItem.setAttribute('data-id', PEOPLE_MODE);\n  peopleMenuItem.innerText = 'People';\n\n  const vehiclesMenuItem = document.createElement('p');\n  vehiclesMenuItem.classList.add('swquiz-mainmenu-item');\n  vehiclesMenuItem.id = VEHICLES_MODE;\n  vehiclesMenuItem.setAttribute('data-id', VEHICLES_MODE);\n  vehiclesMenuItem.innerText = 'Vehicles';\n\n  const starshipsMenuItem = document.createElement('p');\n  starshipsMenuItem.classList.add('swquiz-mainmenu-item');\n  starshipsMenuItem.id = STARSHIPS_MODE;\n  starshipsMenuItem.setAttribute('data-id', STARSHIPS_MODE);\n  starshipsMenuItem.innerText = 'Starships';\n\n  menuContainer.appendChild(peopleMenuItem);\n  menuContainer.appendChild(vehiclesMenuItem);\n  menuContainer.appendChild(starshipsMenuItem);\n\n  const mainMenuItems = [peopleMenuItem, vehiclesMenuItem, starshipsMenuItem];\n\n  mainMenuItems.forEach((item) => {\n    item.addEventListener('click', function () {\n      if(document.querySelector('.main-quiz-game')) return;\n      selectGameMode(item);\n      mainMenuItems.forEach((item) => item.classList.remove('selected'));\n      this.classList.add('selected');\n    });\n  });\n\n  return menuContainer;\n}\n\nexport { createMainMenu };\n","import './ImgModePeople.css';\n\nconst createImgElementPeopleMode = (imgBase64) => {\n  const img = new Image();\n  const url = atob(imgBase64);\n  img.src = url;\n  img.classList.add('swq_recognitionimg-people');\n  return img;\n};\n\nexport default createImgElementPeopleMode;\n","import './gameMode.css';\nimport {\n  PEOPLE_MODE,\n  VEHICLES_MODE,\n  STARSHIPS_MODE\n} from '../mainMenu/mainMenu';\n\nexport const PEOPLE_MODE_QUESTION = 'Who is this Character?';\nexport const VEHICLES_MODE_QUESTION = 'Do you recognize this vehicle?';\nexport const STARSHIPS_MODE_QUESTION = 'Do you recognize this starship?';\n\nexport const gameMode = (modeQuestion) => {\n  const questionContainer = document.createElement('div');\n\n  questionContainer.id = 'question';\n  questionContainer.className = 'question';\n  questionContainer.setAttribute('data-id', 'question');\n  let questionText = document.createTextNode(`MODE: ${modeQuestion}`);\n  questionContainer.appendChild(questionText);\n\n  return questionContainer;\n};\n\nexport const getGameModeQuestion = (gameMode) => {\n  switch (gameMode) {\n    case PEOPLE_MODE:\n      return PEOPLE_MODE_QUESTION;\n    case VEHICLES_MODE:\n      return VEHICLES_MODE_QUESTION;\n    case STARSHIPS_MODE:\n      return STARSHIPS_MODE_QUESTION;\n  }\n};\n","export const GAME_MODES = {\n  people: 'people',\n  vehicles: 'vehicles',\n  spaceships: 'spaceships'\n};","import { GAME_MODES } from '../../consts/GAME_MODES';\nimport './gameRules.css';\n\nconst gameDescriptionText = (gameMode, answer) => {\n  return `You have one minute (1m) to answer as many questions as possible. During the game on each question you need to select ${\n    gameMode === GAME_MODES.people ? 'who' : 'what'\n  } from Star Wars is showed on the left (${answer} right now) from available options`;\n};\n\nexport const createGameRulesComponent = (gameMode, answer) => {\n  const rulesComponent = document.createElement('div');\n  rulesComponent.classList.add('mode-rules');\n\n  const titleEl = document.createElement('div');\n  titleEl.classList.add('mode-rules_title');\n\n  const icon = new Image();\n  icon.src = '../../static/assets/ui/icons/school_24px.png';\n  icon.classList.add('mode-rules_icon');\n  titleEl.appendChild(icon);\n\n  const spanTitleEl = document.createElement('span');\n  const titleText = 'Mode rules';\n  spanTitleEl.innerText = titleText;\n  titleEl.appendChild(spanTitleEl);\n\n  const rulesEl = document.createElement('div');\n  rulesEl.classList.add('mode-rules_content');\n\n  const content = gameDescriptionText(gameMode, answer);\n  rulesEl.innerText = content;\n\n  rulesComponent.appendChild(titleEl);\n  rulesComponent.appendChild(rulesEl);\n\n  return rulesComponent;\n};\n","import './redButton.css';\n\nexport default function redButton(displayText, showGamePanel, gameMode) {\n  const button = document.createElement('button');\n  const label = document.createElement('span');\n  label.appendChild(document.createTextNode(`${displayText}`));\n  label.setAttribute('class', 'btn--label');\n  button.setAttribute('id', 'redButton');\n  button.setAttribute('class', 'btn btn--red');\n  button.append(label);\n  button.addEventListener('click', () => showGamePanel(gameMode));\n  return button;\n}\n","export function toggleButtonText(modeRulesClassList) {\n  const buttonText = document.querySelector('.btnWhite span');\n  let btnIcon = document.querySelector('.btnWhite img');\n\n  const isModeRulesHidden = modeRulesClassList.contains('cover');\n  if(isModeRulesHidden) {\n    btnIcon.setAttribute('src', '../../static/assets/ui/icons/school_24px.png');\n    buttonText.textContent = 'Rules';\n  } else {\n    btnIcon.setAttribute('src', '../../static/assets/ui/icons/contacts_24px.png');\n    buttonText.textContent = 'Hall of fame';\n  }\n}","import { toggleButtonText } from './toggleButtonText';\n\nexport const toggleGameRulesVisibility = () => {\n  const modeRulesContainer = document.querySelector('.mode-rules-container');\n  modeRulesContainer.classList.toggle('cover');\n  const rankContainer = document.querySelector('.ranking-container');\n  rankContainer.classList.toggle('uncover');\n  toggleButtonText(modeRulesContainer.classList);\n};\n","export default function isAnswerCorrect(correctAnswer, playerAnswer) {\n  const isCorrectAnswerString = typeof correctAnswer === 'string';\n  const isPlayerAnswerString = typeof playerAnswer === 'string';\n  if (!isCorrectAnswerString) {\n    throw new Error('CorrectAnswer has to be a string');\n  }\n  if (!isPlayerAnswerString) {\n    throw new Error('PlayerAnswer has to be a string');\n  }\n  return correctAnswer.toLowerCase() === playerAnswer.toLowerCase();\n}\n","export const saveAnswer = (selectedAnswer, isCorrect, questionSaved) => {\n  const game = localStorage.getItem('Game');\n  const parsedGame = JSON.parse(game);\n\n  const human = {\n    answer: selectedAnswer,\n    isCorrect: isCorrect\n  };\n  questionSaved.human = human;\n\n  parsedGame.push(questionSaved);\n  localStorage.setItem('Game', JSON.stringify(parsedGame));\n};\n\nexport const saveNextAnswer = (selectedAnswer, isCorrect, questionSaved) => {\n  const game = localStorage.getItem('Game');\n  const parsedGame = JSON.parse(game);\n\n  const human = {\n    answer: selectedAnswer,\n    isCorrect: isCorrect\n  };\n  questionSaved.human = human;\n  questionSaved.id = parsedGame.length + 1;\n\n  parsedGame.push(questionSaved);\n  localStorage.setItem('Game', JSON.stringify(parsedGame));\n};\n","class AutoPlayer {\n  constructor() {\n    this.id = 'AutoPlayer';\n  }\n\n  generateAutoPlayerAnswer(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  async getAnswer(image, answers) {\n    if (typeof image !== 'string') {\n      throw new Error(\n        'An error occurred while generating answer: type of image is not a string'\n      );\n    }\n    if (!Array.isArray(answers)) {\n      throw new Error(\n        'An error occurred while generating answer: answers is not an array'\n      );\n    }\n    if (answers.length !== 4) {\n      /*throw new Error('An error occurred while generating answer: answers array is expected to contain 4 answers');*/\n      console.log('answers less than 4');\n      console.log(answers);\n    }\n    const autoPlayerAnswerIndex = this.generateAutoPlayerAnswer(0, 3);\n    const autoPlayerAnswer = answers[autoPlayerAnswerIndex];\n\n    return autoPlayerAnswer;\n  }\n}\n\nexport function getAutoPlayer() {\n  const autoPlayer = new AutoPlayer();\n  return autoPlayer;\n}\n","export function changeGameModeText() {\n  const gameModeElement = document.getElementById('question');\n  const gameModeElementText = gameModeElement.textContent;\n  const newGameModeElementText =  gameModeElementText.replace('MODE: ', 'Question: ');\n  gameModeElement.textContent = newGameModeElementText;\n}","import generateQuestionForTheGameMode from '../../services/game/generateQuestions';\nimport createImgElementPeopleMode from '../../components/recognitionImg/ImgModePeople/ImgModePeople';\nimport {\n  gameMode as createGameMode,\n  getGameModeQuestion\n} from '../../components/gameMode/gameMode';\nimport { createAnswersCards } from '../../components/answersCard/answersCard';\nimport { saveNextAnswer } from '../player/player';\nimport { getAutoPlayer } from '../player/autoPlayer';\nimport { changeGameModeText } from './changeGameModeText';\n\nfunction createWrapperForComponent(className, nodeName) {\n  if (typeof className !== 'string' && className.length < 2)\n    throw new Error(\n      'An error occurred while create wrapper for components: argument className have to be a string type and have a length of at least 2'\n    );\n  if (typeof className !== 'string' && className.length < 2)\n    throw new Error(\n      'An error occurred while create wrapper for components: argument className have to be a string type and have a length of at least 2'\n    );\n\n  const componentWrapper = document.createElement(nodeName);\n  componentWrapper.classList.add(className);\n\n  return componentWrapper;\n}\n\nexport const showNextQuestion = async (gameMode) => {\n  const quizGameView = document.querySelector('.main-quiz-game');\n  const spinner = document.querySelector('.sk-circle');\n  spinner.classList.remove('hide');\n  const spinnerVisibilityTime = 200;\n\n  const question = await generateQuestionForTheGameMode(gameMode);\n  const { answers, rightAnswer, image } = question;\n\n  const questionsArea = document.createElement('div');\n  questionsArea.classList.add('main-questions-area');\n\n  const imageWrapper = createWrapperForComponent('image-container', 'div');\n  imageWrapper.appendChild(createImgElementPeopleMode(image));\n\n  const gameModeWrapper = createWrapperForComponent(\n    'game-mode-container',\n    'div'\n  );\n  gameModeWrapper.appendChild(createGameMode(getGameModeQuestion(gameMode)));\n\n  const answersCardsWrapper = createWrapperForComponent(\n    'answers-card-container',\n    'div'\n  );\n\n  const computer = getAutoPlayer();\n  const autoPlayer = await computer.getAnswer(image, answers);\n\n  const questionSaved = {\n    img: image,\n    correctAnswer: rightAnswer,\n    autoPlayer: {\n      answer: autoPlayer,\n      isCorrect: autoPlayer === rightAnswer ? true : false\n    }\n  };\n\n  answersCardsWrapper.appendChild(\n    createAnswersCards(\n      answers,\n      rightAnswer,\n      saveNextAnswer,\n      gameMode,\n      questionSaved\n    )\n  );\n\n  questionsArea.appendChild(imageWrapper);\n  questionsArea.appendChild(gameModeWrapper);\n  questionsArea.appendChild(answersCardsWrapper);\n\n  setTimeout(async () => {\n    quizGameView.prepend(questionsArea);\n    spinner.classList.add('hide');\n    changeGameModeText();\n  }, spinnerVisibilityTime);\n};\n","export function throttle(callback, delay = 1000) {\n  if(typeof callback !== 'function') throw new Error(\n    'An error occurred while invoke function throttle: argument fn have to be a function'\n  )\n  if(typeof delay !== 'number') throw new Error(\n    'An error occurred while invoke function throttle: argument delay have to be a number'\n  );\n  let lastClickTime = 0;\n  return (...args) => {\n    const currentClickTime = new Date().getTime();\n\n    if(currentClickTime - lastClickTime < delay) {\n      return;\n    }\n\n    lastClickTime = currentClickTime;\n    return callback(...args);\n  }\n}","import './answersCard.css';\nimport isAnswerCorrect from '../../services/game/isAnswerCorrect';\nimport { showNextQuestion } from '../../services/game/showNextQuestion';\nimport { throttle } from '../../utils/helpers/throttle';\n\nfunction answersCardsEventHandler(\n  button,\n  correctAnswer,\n  gameMode,\n  questionSaved,\n  savePlayerAnswers\n) {\n  const selectedAnswer = button.textContent;\n\n  if (isAnswerCorrect(correctAnswer, selectedAnswer)) {\n    button.classList.add('answer__button--correct');\n    savePlayerAnswers(selectedAnswer, true, questionSaved);\n\n    setTimeout(() => {\n      const prevGameView = document.querySelector('.main-questions-area');\n      prevGameView.remove();\n      showNextQuestion(gameMode);\n    }, 500);\n  } else {\n    button.classList.add('answer__button--wrong');\n    savePlayerAnswers(selectedAnswer, false, questionSaved);\n    setTimeout(() => {\n      const prevGameView = document.querySelector('.main-questions-area');\n      prevGameView.remove();\n      showNextQuestion(gameMode);\n    }, 500);\n  }\n}\n\nexport function createAnswersCards(\n  possibleAnswers,\n  correctAnswer,\n  savePlayerAnswers,\n  gameMode,\n  questionSaved\n) {\n  if (!Array.isArray(possibleAnswers))\n    throw new Error('possibleAnswers array is not an array');\n  if (possibleAnswers.length === 0)\n    throw new Error('possibleAnswers array has no content');\n  if (typeof correctAnswer !== 'string')\n    throw new Error('correctAnswer must be a string');\n  if (typeof savePlayerAnswers !== 'function')\n    throw new Error('savePlayerAnswers should be a function');\n\n  const answersCardsComponent = document.createElement('div');\n  answersCardsComponent.setAttribute('class', 'answer__wrapper');\n\n  possibleAnswers.forEach((answer) => {\n    const button = document.createElement('button');\n    button.setAttribute('class', 'answer__button');\n    button.classList.remove('answer__button--correct', 'answer__button--wrong');\n\n    const label = document.createElement('span');\n    label.appendChild(document.createTextNode(answer));\n    label.setAttribute('class', 'answer__button--label');\n\n    button.appendChild(label);\n    answersCardsComponent.appendChild(button);\n\n    button.addEventListener(\n      'click',\n      throttle(\n        () =>\n          answersCardsEventHandler(\n            button,\n            correctAnswer,\n            gameMode,\n            questionSaved,\n            savePlayerAnswers\n          ),\n        1000\n      )\n    );\n  });\n\n  return answersCardsComponent;\n}\n","import './TextTimer.css';\n\nexport function TextTimer(minutes, seconds) {\n    const counterOutput = document.createElement('div');\n    counterOutput.className = 'counterOutput';\n    let remainingTime = `${minutes} : ${seconds}`;\n\n    if (minutes === 0 && seconds === 0) {\n        remainingTime = 'Time end';\n    } else {\n        if (seconds < 10) {\n            seconds = `0${seconds}`;\n        }\n        remainingTime = `Time Left: ${minutes}m : ${seconds}s`;\n    }\n\n    counterOutput.innerText = remainingTime;\n\n    return counterOutput;\n}","import './LightsaberTimer.css';\n\nexport function LightsaberTimer(progress) {\n    const root = document.querySelector(':root');\n    root.style.setProperty('--progress', `${progress}%`);\n    const saberArea = document.createElement('div');\n    saberArea.className = 'saberArea';\n\n    const saberHandle = new Image();\n    saberHandle.src = '../../static/assets/ui/LightSaberHandle.png';\n    saberHandle.className = 'saberHandle';\n    saberHandle.setAttribute('alt', 'Star Wars Saber Handle');\n    saberArea.appendChild(saberHandle);\n\n    const saberLight = document.createElement('div');\n    saberLight.className = 'saberLight';\n    saberArea.appendChild(saberLight);\n\n    return saberArea;\n}\n","export const convertTimeToSeconds = (minutes, seconds) => minutes * 60 + seconds;","import './modal.css';\n\nexport function modal(component, callback) {\n  const swquiz = document.getElementById('swquiz-app');\n\n  const backdrop = document.createElement('div');\n  backdrop.setAttribute('id', 'backdrop');\n  swquiz.appendChild(backdrop);\n\n  const modal = document.createElement('aside');\n  modal.setAttribute('id', 'modal');\n  modal.setAttribute('class', 'overlay');\n  modal.appendChild(component);\n  swquiz.appendChild(modal);\n\n  modal.addEventListener('click', callback);\n}\n\nexport function closeModal() {\n  const modal = document.getElementById('modal');\n  const backdrop = document.getElementById('backdrop');\n  modal.style.display = 'none';\n  backdrop.style.display = 'none';\n}\n","import './modalWindowContent.css';\nimport { closeQuizGamePanel } from '../quizGameView/quizGameView';\nimport { createGamePanel } from '../mainView/mainView';\nimport { async } from 'regenerator-runtime';\n\nconst hideModalVisibility = () => {\n  const modal = document.querySelector('.content');\n  modal.classList.add('hidden');\n};\n\nconst countCorrectAnswers = (answersList, player) => {\n  const answers = [];\n  answersList.forEach((answer) => {\n    if (answer[player].isCorrect) {\n      answers.push(answer[player].isCorrect);\n    } else return;\n  });\n  return answers;\n};\n\nconst setYodaQuoteString = (humanPlayer, autoPlayer) => {\n  if (humanPlayer > autoPlayer) {\n    return 'The force is strong in you young Padawan!';\n  } else return 'Much to learn you still have...my young Padawan.';\n};\n\nconst setFinishGameString = (\n  quote,\n  questionsNumber,\n  humanAnswers,\n  autoPlayerAnswers\n) => {\n  return `${quote} During 1 minute you have answered ${humanAnswers} / ${questionsNumber} questions. And Google guessed ${autoPlayerAnswers} / ${questionsNumber}.`;\n};\n\nconst getFinishGameString = (answersList) => {\n  const questionsNumber = answersList.length;\n\n  const human = countCorrectAnswers(answersList, 'human').length;\n  const autoPlayer = countCorrectAnswers(answersList, 'autoPlayer').length;\n\n  const text = setFinishGameString(\n    setYodaQuoteString(human, autoPlayer),\n    questionsNumber,\n    human,\n    autoPlayer\n  );\n  return text;\n};\n\nconst prepareEndGameText = () => {\n  const title = document.createElement('h2');\n  title.classList.add('content_title');\n  title.innerText = 'GAME OVER';\n  return title;\n};\n\nconst prepareEndGameSummary = (answersList) => {\n  const summary = document.createElement('p');\n  summary.classList.add('content_summary');\n  summary.innerText = getFinishGameString(answersList);\n  return summary;\n};\n\nconst createHeroImg = () => {\n  const img = new Image();\n  img.classList.add('middle-wrapper_img');\n  img.src = '../../static/assets/ui/MasterYodaLeft.png';\n  img.alt = 'MasterYoda';\n  return img;\n};\n\nconst createAnswersHeading = () => {\n  const answersHeading = document.createElement('h3');\n  answersHeading.classList.add('right-wrapper_title');\n  answersHeading.innerText = 'Detailed answers:';\n  return answersHeading;\n};\n\nconst displayResultsTable = (answersList) => {\n  const resultsTable = document.createElement('table');\n  resultsTable.classList.add('resultsTable');\n  const header = document.createElement('thead');\n  header.classList.add('resultsTable_header');\n  const headerRow = document.createElement('tr');\n  headerRow.classList.add('resultsTable_header-row');\n\n  const columnNames = ['', 'You', 'Computer', 'Answer'];\n  columnNames.forEach((name) => {\n    const th = document.createElement('th');\n    th.innerText = `${name}`;\n    headerRow.appendChild(th);\n  });\n\n  header.appendChild(headerRow);\n  resultsTable.appendChild(headerRow);\n\n  const resultsTableBody = document.createElement('tbody');\n  resultsTableBody.classList.add('resultsTable_body');\n\n  answersList.forEach((answer) => {\n    const markup = `\n        <tr>\n          <td> <img src=\"${atob(answer.img)}\" class=\"resultsTable_img\"/> </td>\n          <td class=\"resultsTable_answer--${\n            answer.human.isCorrect ? 'correct' : 'incorrect'\n          }\"> ${answer.human.answer} </td>\n          <td class=\"resultsTable_answer--${\n            answer.autoPlayer.isCorrect ? 'correct' : 'incorrect'\n          }\"> ${answer.autoPlayer.answer} </td>\n          <td class=\"resultsTable_answer--default\"> ${\n            answer.correctAnswer\n          } </td>\n        </tr>`;\n    resultsTableBody.insertAdjacentHTML('beforeend', markup);\n  });\n\n  resultsTable.appendChild(resultsTableBody);\n  return resultsTable;\n};\n\nconst createNameInput = () => {\n  const nameInput = document.createElement('input');\n  nameInput.classList.add('form_name-input');\n  nameInput.setAttribute('id', 'name');\n  nameInput.setAttribute('placeholder', 'Type your name here');\n  return nameInput;\n};\n\nconst createNameLabel = () => {\n  const nameLabel = document.createElement('label');\n  nameLabel.classList.add('form_name-label');\n  nameLabel.setAttribute('for', 'name');\n  nameLabel.innerText =\n    'Please fill your name in order to receive eternal glory in whole Galaxy!';\n  return nameLabel;\n};\n\nconst createWarning = () => {\n  const warning = document.createElement('span');\n  warning.innerText = 'This field cannot be empty';\n  warning.classList.add('form_warning');\n  return warning;\n};\n\nconst showWarning = () => {\n  const warning = document.querySelector('.form_warning');\n  warning.classList.add('form_warning--active');\n};\n\nconst hideWarning = () => {\n  const warning = document.querySelector('.form_warning');\n  warning.classList.remove('form_warning--active');\n};\n\nconst createSubmitButton = () => {\n  const submitBtn = document.createElement('button');\n  submitBtn.classList.add('form_submitBtn');\n  submitBtn.setAttribute('type', 'submit');\n  const submitTxt = 'may the force be with you';\n  submitBtn.innerText = submitTxt.toUpperCase();\n  return submitBtn;\n};\n\nconst handleSaveUserResult = (e, saveScore, answersList, gameMode) => {\n  e.preventDefault();\n  const input = document.querySelector('.form_name-input');\n  const playerName = input.value;\n  if (playerName === '') {\n    showWarning();\n  } else {\n    const score = countCorrectAnswers(answersList, 'human').length;\n    saveScore(playerName, score, gameMode, answersList);\n    input.value = '';\n    setTimeout(() => {\n      hideModalVisibility();\n      const backdrop = document.getElementById('backdrop');\n      const modalWrapper = document.getElementById('modal');\n      setTimeout(() => {\n        backdrop.remove();\n        modalWrapper.remove();\n      }, 500);\n    }, 1000);\n  }\n};\n\nexport const gameResultsModal = (saveScore, gameMode) => {\n  const game = localStorage.getItem('Game');\n  const answersList = JSON.parse(game);\n\n  const content = document.createElement('div');\n  content.classList.add('content');\n\n  const title = prepareEndGameText();\n\n  const summary = prepareEndGameSummary(answersList);\n\n  const middleContainer = document.createElement('div');\n  middleContainer.classList.add('middle_wrapper');\n\n  const img = createHeroImg();\n  middleContainer.appendChild(img);\n\n  const rightContainer = document.createElement('div');\n  rightContainer.classList.add('right_wrapper');\n\n  const answersHeading = createAnswersHeading();\n  rightContainer.appendChild(answersHeading);\n\n  const resultsTable = displayResultsTable(answersList);\n  rightContainer.appendChild(resultsTable);\n\n  middleContainer.appendChild(rightContainer);\n\n  const form = document.createElement('form');\n  form.classList.add('content_form');\n\n  const nameInput = createNameInput();\n  nameInput.addEventListener('focus', () => hideWarning());\n\n  const nameLabel = createNameLabel();\n  const warning = createWarning();\n\n  const submitBtn = createSubmitButton();\n  submitBtn.addEventListener('click', async (e) => {\n    handleSaveUserResult(e, saveScore, answersList, gameMode);\n    closeQuizGamePanel();\n    const mainView = document.querySelector('.main-view');\n    mainView.appendChild(await createGamePanel());\n  });\n\n  form.appendChild(warning);\n  form.appendChild(nameInput);\n  form.appendChild(nameLabel);\n  form.appendChild(submitBtn);\n\n  content.appendChild(title);\n  content.appendChild(summary);\n  content.appendChild(middleContainer);\n  content.appendChild(form);\n\n  return content;\n};\n","export const setRank = () => {\n  if (localStorage.getItem('rank') !== null) {\n    const rank = localStorage.getItem('rank');\n    const rankParsed = JSON.parse(rank);\n    return rankParsed;\n  } else {\n    localStorage.setItem(\n      'rank',\n      JSON.stringify({\n        people: [],\n        vehicles: [],\n        starships: []\n      })\n    );\n    const rank = localStorage.getItem('rank');\n    const rankParsed = JSON.parse(rank);\n    return rankParsed;\n  }\n};\n\nexport const saveToRank = (gameMode, player) => {\n  let rank = localStorage.getItem('rank');\n  rank = JSON.parse(rank);\n  rank[gameMode].push(player);\n  const sortedRank = rank[gameMode].sort((a, b) => a.score > b.score);\n  rank[gameMode] = sortedRank;\n  localStorage.setItem('rank', JSON.stringify(rank));\n};\n\nexport const getRank = (gameMode) => {\n  let rank = localStorage.getItem('rank');\n  rank = JSON.parse(rank);\n  rank = rank[gameMode];\n};\n","import { saveToRank } from './rank';\n\nexport const saveFinalScore = (playerName, score, gameMode, answersList) => {\n  const player = {\n    playerName: playerName,\n    score: score,\n    questions: answersList.length\n  };\n\n  saveToRank(gameMode, player);\n};\n","import './Timer.css';\nimport { TextTimer } from '../TextTimer/TextTimer';\nimport { LightsaberTimer } from '../LightsaberTimer/LightsaberTimer';\nimport { convertTimeToSeconds } from '../../utils/helpers/convertTimeToSeconds';\nimport { modal } from '../modalWindow/modal';\nimport { gameResultsModal } from '../../components/modalWindowContent/modalWindowContent';\nimport { saveFinalScore } from '../../services/rank/saveFinalScore';\n\nexport function Timer(gameMode) {\n  let minutes = 1;\n  let seconds = 30;\n  let allSeconds = convertTimeToSeconds(minutes, seconds);\n  const timerArea = document.createElement('div');\n  timerArea.className = 'timerArea';\n\n  const initialProgressValue = 100;\n  timerArea.appendChild(LightsaberTimer(initialProgressValue));\n  timerArea.appendChild(TextTimer(minutes, seconds));\n\n  let intervalId = setInterval(function () {\n    seconds -= 1;\n    let progressValue = Math.round(\n      (convertTimeToSeconds(minutes, seconds) / allSeconds) * 100,\n      2\n    );\n    timerArea.innerHTML = '';\n    timerArea.appendChild(LightsaberTimer(progressValue));\n    timerArea.appendChild(TextTimer(minutes, seconds));\n\n    if (minutes > 0 && seconds === 0) {\n      minutes -= 1;\n      seconds = 59;\n    }\n    if (minutes === 0 && seconds === 0) {\n      modal(gameResultsModal(saveFinalScore, gameMode));\n      clearInterval(intervalId);\n      intervalId = null;\n      const timer = document.querySelector('.timerArea');\n      timer.remove();\n      localStorage.removeItem('Game');\n    }\n  }, 1000);\n\n  return timerArea;\n}\n","import './quizGameView.css';\nimport createImgElementPeopleMode from '../recognitionImg/ImgModePeople/ImgModePeople';\nimport {\n  gameMode as createGameMode,\n  getGameModeQuestion\n} from '../gameMode/gameMode';\nimport { createAnswersCards } from '../answersCard/answersCard';\nimport { Timer } from '../Timer/Timer';\nimport generateQuestionForTheGameMode from '../../services/game/generateQuestions';\nimport { saveAnswer } from '../../services/player/player';\nimport { getAutoPlayer } from '../../services/player/autoPlayer';\n\nfunction createWrapperForComponent(className, nodeName) {\n  if (typeof className !== 'string' && className.length < 2)\n    throw new Error(\n      'An error occurred while create wrapper for components: argument className have to be a string type and have a length of at least 2'\n    );\n  if (typeof className !== 'string' && className.length < 2)\n    throw new Error(\n      'An error occurred while create wrapper for components: argument className have to be a string type and have a length of at least 2'\n    );\n\n  const componentWrapper = document.createElement(nodeName);\n  componentWrapper.classList.add(className);\n\n  return componentWrapper;\n}\n\nexport function closeQuizGamePanel() {\n  const quizGamePanel = document.querySelector('.main-quiz-game');\n  quizGamePanel.remove();\n}\n\nexport async function createQuizGameView(gameMode = 'people') {\n  const question = await generateQuestionForTheGameMode(gameMode);\n  const { answers, rightAnswer, image } = question;\n\n  const quizGameView = document.createElement('main');\n  quizGameView.classList.add('main-quiz-game');\n\n  const questionsArea = document.createElement('div');\n  questionsArea.classList.add('main-questions-area');\n\n  const imageWrapper = createWrapperForComponent('image-container', 'div');\n  imageWrapper.appendChild(createImgElementPeopleMode(image));\n\n  const gameModeWrapper = createWrapperForComponent(\n    'game-mode-container',\n    'div'\n  );\n  gameModeWrapper.appendChild(createGameMode(getGameModeQuestion(gameMode)));\n\n  const answersCardsWrapper = createWrapperForComponent(\n    'answers-card-container',\n    'div'\n  );\n\n  const computer = getAutoPlayer();\n  const autoPlayer = await computer.getAnswer(image, answers);\n\n  const questionSaved = {\n    id: 1,\n    img: image,\n    correctAnswer: rightAnswer,\n    autoPlayer: {\n      answer: autoPlayer,\n      isCorrect: autoPlayer === rightAnswer ? true : false\n    }\n  };\n\n  const game = [];\n  localStorage.setItem('Game', JSON.stringify(game));\n\n  answersCardsWrapper.appendChild(\n    createAnswersCards(\n      answers,\n      rightAnswer,\n      saveAnswer,\n      gameMode,\n      questionSaved\n    )\n  );\n\n  const timerContainer = createWrapperForComponent('timer-container', 'div');\n  timerContainer.appendChild(Timer(gameMode));\n\n  questionsArea.appendChild(imageWrapper);\n  questionsArea.appendChild(gameModeWrapper);\n  questionsArea.appendChild(answersCardsWrapper);\n  quizGameView.appendChild(questionsArea);\n  quizGameView.appendChild(timerContainer);\n\n  return quizGameView;\n}\n","import { createQuizGameView } from '../../components/quizGameView/quizGameView';\nimport { changeGameModeText } from './changeGameModeText';\n\nexport const showGamePanel = async (gameMode) => {\n  const mainView = document.querySelector('.main-view');\n  const startGamePanel = document.querySelector('.main-game-panel');\n  const spinner = document.querySelector('.sk-circle');\n\n  if (startGamePanel) {\n    startGamePanel.remove();\n  }\n  spinner.classList.remove('hide');\n\n  const spinnerVisibilityTime = 1500;\n\n  setTimeout(async () => {\n    mainView.appendChild(await createQuizGameView(gameMode));\n    changeGameModeText();\n    spinner.classList.add('hide');\n  }, spinnerVisibilityTime);\n};\n","import './ranking.css';\nimport { setRank } from '../../services/rank/rank';\n\nconst getRankingTable = (gameMode) => {\n  const rankingTableContent = document.createElement('table');\n  rankingTableContent.classList.add('ranking_content');\n\n  const header = document.createElement('thead');\n  header.classList.add('ranking_content', 'content_header');\n\n  const headerRow = document.createElement('tr');\n  headerRow.classList.add('content_header-row');\n\n  const columnNames = ['Place', 'Player', 'Answered'];\n  columnNames.forEach((name) => {\n    const th = document.createElement('th');\n    th.innerText = `${name}`;\n    headerRow.appendChild(th);\n  });\n\n  header.appendChild(headerRow);\n  rankingTableContent.appendChild(headerRow);\n\n  const contentTableBody = document.createElement('tbody');\n  contentTableBody.classList.add('content_body');\n\n  let playersRankingData = setRank();\n\n  if (playersRankingData[gameMode].length === 0) {\n    const fakeRanking = [\n      {\n        playerName: 'That can be you',\n        score: 20,\n        questions: 20\n      }\n    ];\n    fakeRanking.forEach((player, index) => {\n      const markup = `\n    <tr> \n      <td class=\"content_body-row\"> ${index + 1}${\n        index + 1 === 1 ? 'st' : 'nd'\n      } </td>\n      <td class=\"content_body-row\"> ${player.playerName} </td>\n      <td class=\"content_body-row content_body-row--last\"> ${player.score} / ${\n        player.questions\n      } </td>\n    </tr>`;\n      rankingTableContent.insertAdjacentHTML('beforeend', markup);\n    });\n    localStorage.setItem(\n      'rank',\n      JSON.stringify({\n        people: [],\n        vehicles: [],\n        starships: []\n      })\n    );\n  } else {\n    playersRankingData[gameMode].forEach((player, index) => {\n      const markup = `\n    <tr> \n      <td class=\"content_body-row\"> ${index + 1}${\n        index + 1 === 1 ? 'st' : 'nd'\n      } </td>\n      <td class=\"content_body-row\"> ${player.playerName} </td>\n      <td class=\"content_body-row content_body-row--last\"> ${player.score} / ${\n        player.questions\n      } </td>\n    </tr>`;\n      rankingTableContent.insertAdjacentHTML('beforeend', markup);\n    });\n\n    return rankingTableContent;\n  }\n\n  return rankingTableContent;\n};\n\nexport const getRanking = (gameMode) => {\n  const rankingWrapper = document.createElement('div');\n  rankingWrapper.classList.add('ranking');\n\n  const rankingTitle = document.createElement('div');\n  rankingTitle.classList.add('ranking_title');\n\n  const rankingTitleIcon = document.createElement('img');\n  rankingTitleIcon.src = '../../static/assets/ui/icons/contacts_24px.png';\n  rankingTitleIcon.classList.add('ranking_icon');\n  rankingTitle.appendChild(rankingTitleIcon);\n\n  const rankingTitleText = document.createElement('span');\n  rankingTitleText.classList.add('ranking_text');\n  rankingTitleText.innerText = 'Mode Ranking';\n\n  rankingTitle.appendChild(rankingTitleText);\n\n  rankingWrapper.appendChild(rankingTitle);\n  const ranking = getRankingTable(gameMode);\n  rankingWrapper.appendChild(ranking);\n\n  return rankingWrapper;\n};\n","import './mainView.css';\nimport generateQuestionForTheGameMode from '../../services/game/generateQuestions';\nimport createLogo from '../swLogo/swLogo';\nimport { createMainMenu } from '../mainMenu/mainMenu';\nimport createImgElementPeopleMode from '../recognitionImg/ImgModePeople/ImgModePeople';\nimport {\n  gameMode as createGameMode,\n  getGameModeQuestion\n} from '../gameMode/gameMode';\nimport { createGameRulesComponent } from '../gameRules/gameRules';\nimport redButton from '../redButton/redButton';\nimport { whiteButton } from '../whiteButton/whiteButton';\nimport { toggleGameRulesVisibility } from '../../services/game/toggleGameRulesVisibility';\nimport { showGamePanel } from '../../services/game/showGamePanel';\nimport { selectGameMode } from '../../services/game/selectGameMode';\nimport { getRanking } from '../ranking/ranking';\n\nfunction createWrapperForComponent(className, nodeName) {\n  if (typeof className !== 'string' && className.length < 2)\n    throw new Error(\n      'An error occurred while create wrapper for components: argument className have to be a string type and have a length of at least 2'\n    );\n  if (typeof className !== 'string' && className.length < 2)\n    throw new Error(\n      'An error occurred while create wrapper for components: argument className have to be a string type and have a length of at least 2'\n    );\n\n  const componentWrapper = document.createElement(nodeName);\n  componentWrapper.classList.add(className);\n\n  return componentWrapper;\n}\n\nfunction prepareNavigationData() {\n  return [\n    {\n      nodeName: 'nav',\n      className: 'navigation',\n      children: [\n        {\n          component: createLogo(),\n          containerClassName: 'logo-container',\n          containerNodeName: 'div'\n        },\n        {\n          component: createMainMenu(selectGameMode),\n          containerClassName: 'main-menu-container',\n          containerNodeName: 'div'\n        }\n      ]\n    }\n  ];\n}\n\nfunction prepareMainData(imgData, gameMode, answer) {\n  return [\n    {\n      nodeName: 'main',\n      className: 'main-game-panel',\n      children: [\n        {\n          component: createImgElementPeopleMode(imgData),\n          containerClassName: 'image-container',\n          containerNodeName: 'div'\n        },\n        {\n          component: createGameMode(getGameModeQuestion(gameMode)),\n          containerClassName: 'game-mode-container',\n          containerNodeName: 'div'\n        },\n        {\n          component: getRanking(gameMode),\n          containerClassName: 'ranking-container',\n          containerNodeName: 'div'\n        },\n        {\n          component: createGameRulesComponent(gameMode, answer),\n          containerClassName: 'mode-rules-container',\n          containerNodeName: 'div'\n        },\n        {\n          component: whiteButton(\n            '../../static/assets/ui/icons/contacts_24px.png',\n            'Hall of fame',\n            toggleGameRulesVisibility\n          ),\n          containerClassName: 'btn-container',\n          containerNodeName: 'div'\n        },\n        {\n          component: redButton('Play the game', showGamePanel, gameMode),\n          containerClassName: 'btn-container',\n          containerNodeName: 'div'\n        }\n      ]\n    }\n  ];\n}\n\nfunction getComponentsForNavigation(componentsData) {\n  if (!Array.isArray(componentsData))\n    throw new Error(\n      'An error occurred while get components for navigation: argument componentsData is not an array'\n    );\n  const componentsForNavigation = componentsData.map(\n    ({ nodeName, className, children }) => {\n      const wrapper = createWrapperForComponent(className, nodeName);\n\n      children.forEach(\n        ({ component, containerClassName, containerNodeName }) => {\n          const container = createWrapperForComponent(\n            containerClassName,\n            containerNodeName\n          );\n          container.appendChild(component);\n          wrapper.appendChild(container);\n        }\n      );\n\n      return wrapper;\n    }\n  );\n\n  return componentsForNavigation[0];\n}\n\nfunction getComponentsForMain(componentsData) {\n  if (!Array.isArray(componentsData))\n    throw new Error(\n      'An error occurred while get components for main view: argument componentsData is not an array'\n    );\n\n  const componentsForMain = componentsData.map(\n    ({ nodeName, className, children }) => {\n      const wrapper = createWrapperForComponent(className, nodeName);\n\n      children.forEach(\n        ({ component, containerClassName, containerNodeName }) => {\n          const container = createWrapperForComponent(\n            containerClassName,\n            containerNodeName\n          );\n          container.appendChild(component);\n          wrapper.appendChild(container);\n        }\n      );\n\n      return wrapper;\n    }\n  );\n\n  return componentsForMain[0];\n}\n\nexport const createGamePanel = async (mode = 'people') => {\n  const question = await generateQuestionForTheGameMode(mode);\n\n  const mainComponents = getComponentsForMain(\n    prepareMainData(question.image, mode, question.rightAnswer)\n  );\n\n  return mainComponents;\n};\n\nexport const createMainView = async (mode = 'people') => {\n  const mainViewComponent = document.createElement('div');\n  mainViewComponent.classList.add('main-view');\n\n  const navigation = getComponentsForNavigation(prepareNavigationData());\n\n  mainViewComponent.appendChild(navigation);\n\n  const spinner = document.querySelector('.sk-circle');\n  spinner.classList.remove('hide');\n\n  const gamePanel = await createGamePanel(mode);\n\n  spinner.classList.add('hide');\n\n  mainViewComponent.appendChild(gamePanel);\n\n  return mainViewComponent;\n};\n","import './spinner.css';\n/* spinner belongs to https://github.com/tobiasahlin/SpinKit */\n\nexport const spinner = () => {\n  const skCircle = document.createElement('div');\n  skCircle.classList.add('sk-circle', 'hide');\n\n  for (let i = 1; i <= 12; i++) {\n    const div = document.createElement('div');\n    div.classList.add(`sk-circle${i}`, 'sk-child');\n    skCircle.appendChild(div);\n  }\n\n  return skCircle;\n};\n","import { createMainView } from '../components/mainView/mainView';\nimport { spinner } from '../components/spinner/spinner';\n\nexport const App = async ({ options }) => {\n  const swquiz = document.getElementById('swquiz-app');\n\n  swquiz.appendChild(spinner());\n  swquiz.appendChild(await createMainView());\n};\n","import 'regenerator-runtime/runtime' //async/await with Parcel\nimport {App} from \"./app/App\";\nimport '../styles/App.css';\n\nconst ONE_SECOND_MILLIS = 1000;\nconst SW_API_BASE_URL = process.env.SW_API_BASE_URL || \"https://swapi.dev/api\";\nconst QUIZ_MAX_TIME = process.env.QUIZ_MAX_TIME_SECONDS ? process.env.QUIZ_MAX_TIME_SECONDS * ONE_SECOND_MILLIS : 120 * ONE_SECOND_MILLIS;\n\nwindow.onload = () => App({options: {swApiBaseUrl: SW_API_BASE_URL, quizMaxTime: QUIZ_MAX_TIME}})\n"]}